(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{286:function(t,a,s){"use strict";s.r(a);var e=s(5),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("C++ 是一个难学易用的语言！难学一方面在于其广博，因此我选择用笔记的形式精简出一些有用的条款。")])]),t._v(" "),s("h2",{attrs:{id:"防止资源泄露"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防止资源泄露"}},[t._v("#")]),t._v(" 防止资源泄露")]),t._v(" "),s("p",[t._v("在发生异常时，好的构造和析构函数能够防止资源泄露。")]),t._v(" "),s("h3",{attrs:{id:"析构函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#析构函数"}},[t._v("#")]),t._v(" 析构函数")]),t._v(" "),s("ol",[s("li",[t._v("用 "),s("code",[t._v("try...catch")]),t._v(" 块，若遇到异常，先释放资源再传递异常，可行但难以维护且不美观")]),t._v(" "),s("li",[t._v("局部对象替代指针避免内存泄露，比如灵巧指针类 "),s("code",[t._v("auto_ptr")])])]),t._v(" "),s("div",{staticClass:"language-C ++ line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("auto_ptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("delete ptr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在析构函数里显式释放资源")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),s("p",[t._v("由于 C++ 仅仅能删除被完全构造的对象，即只有一个对象的构造函数完全运行完毕，这个对象才被完全地构造，因此，若在构造函数内部发生异常，则异常点之前成功分配的内存就会发生泄漏。")]),t._v(" "),s("p",[t._v("注意，构造函数后冒号为初始化列表，用于 "),s("code",[t._v("const")]),t._v(" 和引用的初始化。该列表仅为表达式而非语句，且总是在构造函数第一条语句执行前执行。")]),t._v(" "),s("ol",[s("li",[t._v("构造函数内用 "),s("code",[t._v("try...catch")]),t._v(" 块，若遇到异常，先释放资源再传递异常")]),t._v(" "),s("li",[t._v("若指针为 "),s("code",[t._v("const")]),t._v("，则 1 不可行，需要另行构造带 "),s("code",[t._v("try...catch")]),t._v(" 的初始化函数来初始化指针，可行但难以维护且使得构造函数过于分散")]),t._v(" "),s("li",[t._v("选择使用 "),s("code",[t._v("auto_ptr")]),t._v(" 将指针封装为一个局部对象，既可防止构造函数内的资源泄露，又可简化析构函数")])])])}),[],!1,null,null,null);a.default=r.exports}}]);